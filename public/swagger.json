{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for concept to market meetup series. You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/)",
        "version": "1.0.0",
        "title": "Concept to market - Restaurant finder",
        "termsOfService": "https://www.google.com/policies/terms/",
        "contact": {
            "email": "youremail@address.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
    },
    "host": "pmd-test-app-001.herokuapp.com",
    "basePath": "/",
    "tags": [{
            "name": "restaurants",
            "description": "Everything about restaurants",
            "externalDocs": {
                "description": "Find out more",
                "url": "http://swagger.io"
            }
        },
        {
            "name": "comments",
            "description": "Comments and related stuff"
        },
        {
            "name": "bulk operations",
            "description": "Bulk operations"
        },
        {
            "name": "users",
            "description": "under construction - operations related to users"
        }
    ],
    "schemes": [
        "https"
    ],
    "paths": {
        "/new-restaurant": {
            "post": {
                "tags": [
                    "restaurants"
                ],
                "summary": "Add a new restaurant",
                "description": "Add a new restaurant to the list",
                "operationId": "addRestaurant",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "Restaurant that needs to be added to the list",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Restaurant"
                    }
                }],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Resource not found"
                    },
                    "500": {
                        "description": "Interna; server error"
                    },
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Restaurant"
                        }
                    }
                }
            }
        },
        "/bulk-add": {
            "post": {
                "tags": [
                    "bulk operations"
                ],
                "summary": "Insert many restaurants at once",
                "description": "Add many restaurants",
                "operationId": "bulkAdd",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "Array of restaurants",
                    "required": true,
                    "schema": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/Restaurant"
                        }
                    }
                }],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Interna; server error"
                    },
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Restaurant"
                            }
                        }
                    }
                }
            }
        },
        "/restaurants": {
            "get": {
                "tags": [
                    "restaurants"
                ],
                "summary": "Get all restaurants",
                "description": "Gets a list of all available restaurants. Pagination is yet to be implemented",
                "operationId": "getAllRestaurants",
                "produces": [
                    "application/json"
                ],
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Restaurant"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/restaurants/{city}": {
            "get": {
                "tags": [
                    "restaurants"
                ],
                "summary": "Finds restaurants by city",
                "description": "Find all the restaurants by city. There is no pagination as of yet",
                "operationId": "getRestaurantsByCity",
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "name": "city",
                    "in": "path",
                    "description": "City to filter by",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Restaurant"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/restaurant/{slug}": {
            "get": {
                "tags": [
                    "restaurants"
                ],
                "summary": "Get restaurant by slug",
                "description": "Returns a single restaurant by unique slug",
                "operationId": "getRestaurantsBySlug",
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "name": "slug",
                    "in": "path",
                    "description": "Restaurant's unique slug",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Restaurant"
                        }
                    },
                    "404": {
                        "description": "Restaurant not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "restaurants"
                ],
                "summary": "Deletes a restaurant",
                "description": "Deletes a restaurant and returns the deleted restaurant",
                "operationId": "deleteRestaurantsBySlug",
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "name": "slug",
                    "in": "path",
                    "description": "Restaurant's unique slug",
                    "required": true,
                    "type": "string"
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Restaurant"
                        }
                    },
                    "404": {
                        "description": "Restaurant not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/update-restaurant/{restaurant_slug}": {
            "post": {
                "tags": [
                    "restaurants"
                ],
                "summary": "Update a restaurant",
                "description": "Updates a restaurant",
                "operationId": "updateRestaurant",
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "name": "restaurant_slug",
                    "in": "path",
                    "description": "Slug of the restaurant to be updated",
                    "required": true,
                    "type": "string"
                }, {
                    "in": "body",
                    "name": "body",
                    "description": "Restaurant that needs to be added to the list",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Restaurant"
                    }
                }],
                "responses": {
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/Restaurant"
                        }
                    },
                    "404": {
                        "description": "Restaurant not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/new-comment": {
            "post": {
                "tags": [
                    "comments"
                ],
                "summary": "Adds a comment",
                "description": "Add a review or comment about a restaurant",
                "operationId": "addComment",
                "produces": [
                    "application/json"
                ],
                "parameters": [{
                    "in": "body",
                    "name": "body",
                    "description": "Comment or review of the restaurant",
                    "required": true,
                    "schema": {
                        "$ref": "#/definitions/Comment"
                    }
                }],
                "responses": {
                    "405": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Restaurant not found"
                    },
                    "500": {
                        "description": "Interna; server error"
                    },
                    "200": {
                        "description": "successful operation",
                        "schema": {
                            "$ref": "#/definitions/ApiResponse"
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "petstore_auth": {
            "type": "oauth2",
            "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
            "flow": "implicit",
            "scopes": {
                "write:pets": "modify pets in your account",
                "read:pets": "read your pets"
            }
        },
        "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "header"
        }
    },
    "definitions": {
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer",
                    "format": "int64"
                },
                "username": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "userStatus": {
                    "type": "integer",
                    "format": "int32",
                    "description": "User Status"
                }
            }
        },
        "Restaurant": {
            "type": "object",
            "required": [
                "name",
                "email",
                "address",
                "city",
                "country",
                "hasBranches"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Sun Dance Cafe"
                },
                "email": {
                    "type": "string",
                    "example": "me@gmail.cm"
                },
                "tagline": {
                    "type": "string",
                    "example": "Confluence of herbs, spices and tradition"
                },
                "pic": {
                    "type": "string",
                    "example": "https://punefoodhunt.files.wordpress.com/2017/10/img_20171007_105450-e1509002011194.jpg"
                },
                "cuisine": {
                    "type": "string",
                    "example": "Mexican, Japanese, Seafood"
                },
                "address": {
                    "type": "string",
                    "example": "221B baker street, Paris"
                },
                "latitude": {
                    "type": "string",
                    "example": "40.719269"
                },
                "longitude": {
                    "type": "string",
                    "example": "-73.996846"
                },
                "city": {
                    "type": "string",
                    "example": "Paris"
                },
                "country": {
                    "type": "string",
                    "example": "France"
                },
                "hasBranches": {
                    "type": "boolean",
                    "example": true
                },
                "updated": {
                    "type": "string",
                    "format": "date-time",
                    "example": "18-Jan-2018"
                },
                "established": {
                    "type": "integer",
                    "format": "int32",
                    "example": "2011"
                },
                "rating": {
                    "type": "integer",
                    "format": "int32",
                    "example": "3"
                },
                "comments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Comment"
                    }
                }
            }
        },
        "Comment": {
            "type": "object",
            "required": [
                "restaurant_slug",
                "body",
                "commented_by",
                "date"
            ],
            "properties": {
                "restaurant_slug": {
                    "type": "string",
                    "example": "kombi-rocks-diner"
                },
                "body": {
                    "type": "string",
                    "example": "exemplary vegan choices"
                },
                "commented_by": {
                    "type": "string",
                    "example": "Dhruw"
                },
                "date": {
                    "type": "string",
                    "format": "date-time",
                    "example": "18-Jan-2018"
                }
            }
        },
        "ApiResponse": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "type": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "description": "Find out more about Swagger",
        "url": "http://swagger.io"
    }
}
